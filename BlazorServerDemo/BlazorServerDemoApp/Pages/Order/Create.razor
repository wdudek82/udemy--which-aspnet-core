@page "/Order/Create"
@using DataLibrary.Data
@inject IFoodData FoodData
@inject IOrderData OrderData

<h3>Create</h3>

<EditForm Model="@order" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary Model="@order"/>
    <div class="form-group">
        <label class="control-label">Item to Order</label>
         <select @onchange="FoodItemChange" class="form-control">
             <option value="">Select a meal...</option>
             @foreach (var food in foodItems)
             {
                 <options value="@food.Id">@food.Title</options>
             }
         </select>
@*         <select @bind="order.FoodId" class="form-control"> *@
@*             <option value="0">Select a meal...</option> *@
@*             @foreach (var food in _foodItems) *@
@*             { *@
@*                 <options value="@food.Id">@food.Title</options> *@
@*             } *@
@*         </select> *@
    </div>
    <div class="form-group">
        <label class="control-label">Quantity</label>
        <InputNumber @bind-Value="order.Quantity" class="form-control"/>
        <ValidationMessage For="@(() => order.Quantity)" class="text-danger"/>
    </div>
    <div class="form-group">
        <label class="contro-label">Name</label>
        <InputText @bind-Value="order.OrderName" class="form-control"/>
        <ValidationMessage For="@(() => order.OrderName)" class="text-danger"/>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Order Food</button>
    </div>
</EditForm>

@code
{
    private OrderModel order = new OrderModel();
    private List<FoodModel> foodItems = new List<FoodModel>();

    protected override async Task OnParametersSetAsync()
    {
        foodItems = await FoodData.GetFood();
    }

    private async Task HandleValidSubmit()
    {
        var price = foodItems.Find(x => x.Id == order.FoodId)!.Price;
        order.Total = order.Quantity * price;

        var id = await OrderData.CreateOrder(order);

        order = new OrderModel();
    }

    private void FoodItemChange(ChangeEventArgs e)
    {
        Console.WriteLine($"=== event: {e}");
        if (!string.IsNullOrWhiteSpace(e.Value.ToString()))
        {
            order.FoodId = int.Parse(e.Value.ToString());
        }
        else
        {
            order.FoodId = 0;
        }
    }
}
